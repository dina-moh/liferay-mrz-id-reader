{"ast":null,"code":"/* global Liferay */\n\nimport axios from 'axios';\nexport function Request(config) {\n  return new Promise((resolve, reject) => {\n    axios.request({\n      headers: {\n        'x-csrf-token': Liferay.authToken\n      },\n      method: 'get',\n      ...config\n    }).then(response => {\n      resolve(response.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n\n  //    Demo Service Request\n}\n_c = Request;\nvar _c;\n$RefreshReg$(_c, \"Request\");","map":{"version":3,"names":["axios","Request","config","Promise","resolve","reject","request","headers","Liferay","authToken","method","then","response","data","catch","error","_c","$RefreshReg$"],"sources":["/Users/dinamakled/Documents/Liferay/Workspaces/liferay-utils/client-extensions/liferay-mrz-document-reader/src/utils/request.js"],"sourcesContent":["/* global Liferay */\n\nimport axios from 'axios';\n\nexport function Request(config) {\n    return new Promise((resolve, reject) => {\n        axios\n            .request({\n                headers: {\n                    'x-csrf-token': Liferay.authToken,\n                },\n                method: 'get',\n                ...config,\n            })\n            .then((response) => {\n                resolve(response.data);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n    });\n\n    //    Demo Service Request\n\n}"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,OAAOA,CAACC,MAAM,EAAE;EAC5B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCL,KAAK,CACAM,OAAO,CAAC;MACLC,OAAO,EAAE;QACL,cAAc,EAAEC,OAAO,CAACC;MAC5B,CAAC;MACDC,MAAM,EAAE,KAAK;MACb,GAAGR;IACP,CAAC,CAAC,CACDS,IAAI,CAAEC,QAAQ,IAAK;MAChBR,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdV,MAAM,CAACU,KAAK,CAAC;IACjB,CAAC,CAAC;EACV,CAAC,CAAC;;EAEF;AAEJ;AAACC,EAAA,GApBef,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}