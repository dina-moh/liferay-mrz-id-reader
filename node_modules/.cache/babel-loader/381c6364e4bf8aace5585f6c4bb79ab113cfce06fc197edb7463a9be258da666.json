{"ast":null,"code":"/* global Liferay */import axios from'axios';export function Request(config){return new Promise((resolve,reject)=>{axios.request({headers:{'x-csrf-token':Liferay.authToken},method:'get',...config}).then(response=>{resolve(response.data);}).catch(error=>{reject(error);});});//    Demo Service Request\n}","map":{"version":3,"names":["axios","Request","config","Promise","resolve","reject","request","headers","Liferay","authToken","method","then","response","data","catch","error"],"sources":["/Users/dinamakled/Documents/Liferay/Workspaces/liferay-utils/client-extensions/liferay-mrz-document-reader/src/utils/request.js"],"sourcesContent":["/* global Liferay */\n\nimport axios from 'axios';\n\nexport function Request(config) {\n    return new Promise((resolve, reject) => {\n        axios\n            .request({\n                headers: {\n                    'x-csrf-token': Liferay.authToken,\n                },\n                method: 'get',\n                ...config,\n            })\n            .then((response) => {\n                resolve(response.data);\n            })\n            .catch((error) => {\n                reject(error);\n            });\n    });\n\n    //    Demo Service Request\n\n}"],"mappings":"AAAA,oBAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,SAAS,CAAAC,OAAOA,CAACC,MAAM,CAAE,CAC5B,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACpCL,KAAK,CACAM,OAAO,CAAC,CACLC,OAAO,CAAE,CACL,cAAc,CAAEC,OAAO,CAACC,SAC5B,CAAC,CACDC,MAAM,CAAE,KAAK,CACb,GAAGR,MACP,CAAC,CAAC,CACDS,IAAI,CAAEC,QAAQ,EAAK,CAChBR,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAAC,CAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CACdV,MAAM,CAACU,KAAK,CAAC,CACjB,CAAC,CAAC,CACV,CAAC,CAAC,CAEF;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}